Создать ветку и переключиться на неё:
	git checkout -b newBranchName

Переключиться между ветками
	git branch -a
	git checkout branchName	
	
Pull всех веток
	git pull --all	
	
Отменить коммит
	git reset

````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
когда нужен чекаут но не хочешь делать коммит
git stash
git stash apply - возвращает последнюю заначку
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
	

push:
git push -u origin dev   --- новую ветку в удалённый репо


	git pull %repository_name% %root_branch_name%	--- вытянуть с ветки в которую будешь вливаться последние изменения
	
	git status
	git add -u
	git status
	git commit -m "msg"
	git push origin branchName (git push origin HEAD)
	
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
лечение глюка
git add -u 
git commit
git remote set-url origin git@git.intech-global.com:telecom/alice-api.git

git branch --set-upstream-to=origin/TASK#82778 TASK#82778
git push
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Переименовать ветку загруженную на удалённый сервер, нужно вначале переименовать ветку локально, а затем выгрузить изменения обратно, удалив предыдущую ветку на сервере.

		git branch -m старое_название новое_название
		git push origin :старое_название новое_название
		
Во второй строчке обратите внимание на двоеточие перед старым именем ветки — это команда для удаления ветки на сервере.
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
удалить гит из корня проекта(можно в идее в командной строке): rd /s /q .git

	